package com.mvc.servlet;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.mvc.model.Order;
import com.mvc.service.OrderDAO;
import com.mvc.service.OrderDAOInterface;

/**
 * Servlet implementation class AddOrderServlet
 */
@WebServlet("/AddOrderServlet")
public class AddOrderServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

	/**
	 * @see HttpServlet#HttpServlet()
	 */
	public AddOrderServlet() {
		super();
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		response.getWriter().append("Served at: ").append(request.getContextPath());
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		response.setContentType("text/html");
		PrintWriter out = response.getWriter();

		String orderID = request.getParameter("orderid");
		String itemID = request.getParameter("itemid");
		Double quantity = Double.parseDouble(request.getParameter("quantity"));
		Double unitprice = Double.parseDouble(request.getParameter("unitprice"));
		String company = request.getParameter("requestedby");
		String orderDate = request.getParameter("orderdate");
		String requestedDate = request.getParameter("requesteddate");

		Order order = new Order();

		order.setOrderID(orderID);
		order.setItemID(itemID);
		order.setQuantity(quantity);
		order.setUnitPrice(unitprice);
		order.setCompany(company);
		order.setOrderDate(orderDate);
		order.setRequestedDate(requestedDate);
		
		double totalCost = quantity * unitprice;
		
		OrderDAOInterface orderDAOInterface = new OrderDAO();
		int status = orderDAOInterface.add(order);

//		if(totalCost > 100000) {
//			System.out.println("NOOOOOOOOOO");
//			out.println("<script src='Sweet_JS/sweetalert2.js'></script>");
//			out.println("<script src='https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js'></script>");
//			out.println("<script>");
//			out.println("$(document).ready(function(){");
//			out.println("swal ( 'Invalid Order!' ,  'The total amount of this order is exceeding the agreed limit in company policies (Rs. 100 000). Please send an order request to management.You cannot continue this order if they haven't agreed.' ,  'error' );");
//			out.println("});");
//			out.println("</script>");
//			
//			request.getRequestDispatcher("/PlaceOrder.jsp").include(request, response);
//		}
		
		if(totalCost > 100000) {
			out.println("<script type=\"text/javascript\">");  
			out.println("alert('Invalid Order ! The total amount of this order is exceeding the agreed limit in company policies (Rs. 100 000). Please send an order request to management.You cannot continue this order if they haven't agreed.');");  
			out.println("</script>");
			
			request.getRequestDispatcher("/PlaceOrder.jsp").include(request, response);
		}
		
		else if (status > 0) {
			out.print("<p>Order has been placed successfully!</p>");
			request.getRequestDispatcher("/PlaceOrder.jsp").include(request, response);
		} else {
			out.println("<p>Sorry! unable to place order!</p>");
			request.getRequestDispatcher("/PlaceOrder.jsp").include(request, response);
		}

		out.close();
	}

}
